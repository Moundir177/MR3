name: Deploy to Cloudflare Pages

on:
  push:
    branches: [master]
  workflow_dispatch:  # Allow manual triggering

# Add permissions for deployments
permissions:
  contents: read
  deployments: write
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Set timeout to avoid hung builds
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Upgrade to v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Setup Node.js
        uses: actions/setup-node@v4  # Upgrade to v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Run Cloudflare optimized build script
        run: npm run cloudflare:build
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
          NEXT_TELEMETRY_DISABLED: 1
          
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: mracad
          directory: .next
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3.11.0'  # Specify a stable Wrangler version
          branch: master
          
      - name: Purge Cloudflare Cache
        if: success()
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}' 